; The acceptance coin
; This must be curried into the initiation coin on genesis
; The initiation coin must then curry the 5 arguments when into MOD_HASH when it is created.
(mod (
		PLAYER1_PUZZLEHASH
		PLAYER1_HASHED_PREIMAGE
		AMOUNT
		PLAYER2_PUZZLEHASH
		PLAYER2_PREIMAGE
		player1_preimage
	)

	(include condition_codes.clib)

	(defconstant LOCK_HEIGHT 100)
	(defconstant DEV_PKEY 0x9461250fe03f4955e3b63fe22d31e6b80e323a80f0c1d076cc5dd1f5eb534ab202bdd41f389c380c37a10a1c88943f40)


	(defun calculate_float (player1_preimage PLAYER2_PREIMAGE)
		(r (divmod (lsh (logxor player1_preimage PLAYER2_PREIMAGE) -236) 10000))
	)

	(defun payout (PLAYER1_PUZZLEHASH player1_preimage PLAYER2_PUZZLEHASH PLAYER2_PREIMAGE AMOUNT)
	 	(if (> (calculate_float player1_preimage PLAYER2_PREIMAGE) 5000) 
			(list  
				(list CREATE_COIN PLAYER1_PUZZLEHASH (* 196 (/ AMOUNT 100)))
				(list CREATE_COIN 0x4185ca7562bcf03e8d0e7d09fa9b5f9936a91c1a2a29a0249fd0b3f4bf9c3037 (* 4 (/ AMOUNT 100)))
				;(list CREATE_COIN PLAYER1_PUZZLEHASH (calculate_float player1_preimage PLAYER2_PREIMAGE))
				(list RESERVE_FEE 1000000000)
			)
			(list  
				(list CREATE_COIN PLAYER2_PUZZLEHASH (* 196 (/ AMOUNT 100)))
				(list CREATE_COIN 0x4185ca7562bcf03e8d0e7d09fa9b5f9936a91c1a2a29a0249fd0b3f4bf9c3037 (* 4 (/ AMOUNT 100)))
				;(list CREATE_COIN PLAYER2_PUZZLEHASH (calculate_float player1_preimage PLAYER2_PREIMAGE))
				(list RESERVE_FEE 1000000000)
			)
		)
	)

	;main
	(if (= (sha256 player1_preimage) PLAYER1_HASHED_PREIMAGE)
		(payout PLAYER1_PUZZLEHASH player1_preimage PLAYER2_PUZZLEHASH PLAYER2_PREIMAGE AMOUNT)
		(if (= player1_preimage 0)
		    (list
			    (list CREATE_COIN PLAYER2_PUZZLEHASH (* 196 (/ AMOUNT 100)))
			    (list CREATE_COIN 0x4185ca7562bcf03e8d0e7d09fa9b5f9936a91c1a2a29a0249fd0b3f4bf9c3037 (* 4 (/ AMOUNT 100)))
			    (list ASSERT_HEIGHT_RELATIVE LOCK_HEIGHT)
			   )
		    (x "Pre-image does not match supplied hash/ initiator hasnt forfeited yet.")
		)
	)

)